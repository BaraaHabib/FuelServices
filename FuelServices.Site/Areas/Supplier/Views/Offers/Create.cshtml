@model FuelServices.DBContext.Domain.OfferViewModel
@using Site.Helpers
@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Supplier/Views/Shared/_Layout.cshtml";
}

<!-- Select2 -->
<link rel="stylesheet" href="~/adminlte/plugins/select2/css/select2.min.css">
<link rel="stylesheet" href="~/adminlte/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
<div class="container">
    <div class="">
        <form class="" asp-action="Create">
            <h2 class="col-md-offset-1">Add Offer</h2>

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row">
                <div class="form-group col-md-offset-1 col-md-5">
                    <label>From</label>
                    <div class="input-group date" id="startdate" data-target-input="nearest">
                        <input required value="@Model.StartDate.ToString("dd/MM/yyyy")" name="StartDate" type="text" class="form-control datetimepicker-input" data-target="#startdate" />
                        <div class="input-group-append" data-target="#startdate" data-toggle="datetimepicker">
                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                        </div>
                    </div>
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="col-md-5 col-md-offset-1">
                    <label>To</label>
                    <div class="input-group date" id="enddate" data-target-input="nearest">
                        <input required value="@Model.EndDate.ToString("dd/MM/yyyy")" name="EndDate" type="text" class="form-control datetimepicker-input" data-target="#enddate" />
                        <div class="input-group-append" data-target="#enddate" data-toggle="datetimepicker">
                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                        </div>
                    </div>
                    <span asp-validation-for="EndDate" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-offset-1 col-md-5">
                    <label class="col-form-label">DuesTaxesLevies</label>
                    <div class="input-group">
                        <input asp-for="DuesTaxesLevies" value="@Model.DuesTaxesLevies" class="form-control" />
                        <span asp-validation-for="DuesTaxesLevies" class="text-danger"></span>

                    </div>
                </div>
                <div class="col-md-offset-1 col-md-5">
                    <label asp-for="ItemOrder" class="col-form-label"></label>
                    <div class="input-group ">
                        <input asp-for="ItemOrder" class="form-control" />
                        <span asp-validation-for="ItemOrder" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-offset-1 col-md-5">
                    <label class="">Fuel Types</label>
                    <div class="form-group">
                        <select style="width:100%;" name="FuelTypes"
                                class="form-control select2" placeholder="" required>
                            @foreach (var item in (List<FuelType>)ViewBag.FuelTypes)
                            {
                                @if (Model.FuelTypes.Contains(item.Id))
                                {
                                    <option selected value="@item.Id">@item.Name</option>
                                }
                                else
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>
                        <span asp-validation-for="FuelTypes" class="text-danger"></span>

                    </div>
                </div>

            </div>
            <br />
            <div class="row">
                <div class="col-12">
                    <div class="">
                        <div class="card card-primary">
                            <div class="card-header">
                                <div class="card-title">
                                    Supplied Airports
                                </div>
                            </div>

                            <div class="card-body">
                                <div class="form-group AirportOffers_template">
                                    <i class="btn btn-default fa fa-plus add">
                                    </i>
                                    <div class="repeatable">
                                        @{
                                            var length = Model?.AirportOffers?.Count;
                                            if (length != null)
                                            {
                                                var cons = Model.AirportOffers;
                                                for (int i = 0; i < cons.Count; i++)
                                                {
                                                    <div class="moparties form-group row">
                                                        <input type="hidden" name="AirportOffers.index" value="@i" />
                                                        <div class="form-group col-md-6">
                                                            <label class="control-label ">Airport</label>
                                                            <div class="">
                                                                <select required name="AirportOffers[@i].AirportId" class="airport-select form-control">
                                                                    @foreach (var item in Model.AirportOffers.ToList())
                                                                    {
                                                                        if (item.AirportId == Model.AirportOffers[i].AirportId)
                                                                        {
                                                                            <option selected value="@item.AirportId">@item.Airport.Name (@item.Airport.Icao)</option>
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="@item.AirportId">@item.Airport.Name (@item.Airport.Icao)</option>

                                                                        }
                                                                    }
                                                                </select>
                                                                @Html.ValidationMessage("AirportOffers[" + i + "].AirportId", new { @class = "text-danger" })
                                                                @*<input class="form-control" type="text" name="OfferParties[{?}].AirportId" value="" required>*@
                                                            </div>
                                                        </div>
                                                        <div class="form-group col-md-4">
                                                            <label class="control-label col-md-1">Price</label>
                                                            <div class="col-md-2">
                                                                <input id="price-input" value="@Model.AirportOffers[i].Price" name="AirportOffers[@i].Price" min="1" type="number" class="form-control" placeholder="">
                                                                @Html.ValidationMessage("AirportOffers[" + i + "].Price", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group col-md-2">
                                                            <label class="col-form-label">Price Unit</label>
                                                            <div class="">
                                                                <select name="AirportOffers[@i].PriceUnit" class="form-control" placeholder="">
                                                                    @foreach (var item in Constants.Units)
                                                                    {
                                                                        @if (Model.AirportOffers[i].PriceUnit == item)
                                                                        {
                                                                            <option selected value="@item">@item</option>
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="@item">@item</option>
                                                                        }
                                                                    }
                                                                </select>
                                                                @Html.ValidationMessage("AirportOffers[" + i + "].PriceUnit", new { @class = "text-danger" })

                                                            </div>
                                                        </div>
                                                        <i class="btn btn-warning fa fa-trash delete"></i>
                                                    </div>
                                                }
                                            }
                                        }
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row col-md-offset-1">
                <button class="btn btn-lg btn-default pull-left" type="submit" value="Submit">Create Offer</button>
                <br />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="~/adminlte/plugins/select2/js/select2.full.min.js"></script>
    <script type="text/javascript" src="~/lib/repeatable/jquery.repeatable.js"></script>


    <script>
        //Date range picker
        $('#startdate').datetimepicker({
            format: "DD/MM/YYYY"
        });
        $('#enddate').datetimepicker({
            format: "DD/MM/YYYY"
        });
    </script>

    <script type="text/template" id="AirportOffers_template">
        <div class="moparties form-group row callout callout-info">
            <input type="hidden" name="AirportOffers.index" value="{?}" />
            <div class="form-group col-md-6">
                <label class="control-label ">Airport</label>
                <div class="">
                    <select required name="AirportOffers[{?}].AirportId" asp-items="ViewBag.AirportId" class="airport-select form-control">
                        @foreach (var item in Model.AirportOffers.ToList())
                        {
                            <option selected value="@item?.AirportId">@item.Airport?.Name (@item.Airport?.Icao)</option>
                        }
                    </select>
                    @Html.ValidationMessage("AirportOffers[{?}].AirportId", new { @class = "text-danger" })
                    @*<input class="form-control" type="text" name="OfferParties[{?}].AirportId" value="" required>*@
                </div>
            </div>
            <div class="form-group col-md-3">
                <label class="control-label">Price</label>
                <div class="">
                    <input required id="price-input" value="" name="AirportOffers[{?}].Price" asp-for="Price" min="1" type="number" class="form-control" placeholder="">
                    @Html.ValidationMessage("AirportOffers[{?}].Price", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-2">
                <label class="control-label ">Price Unit</label>
                <div class="">
                    <select required name="AirportOffers[{?}].PriceUnit" class="form-control" placeholder="">
                        @foreach (var item in Constants.Units)
                        {
                            <option value="@item">@item</option>
                        }
                    </select>
                    @Html.ValidationMessage("AirportOffers[{?}].PriceUnit", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-1">
                <label>Delete</label>
                <button class="btn btn-warning">
                    <i class=" fa fa-trash delete"></i>
                </button>
            </div>


        </div>

    </script>
    <script>
        $(".AirportOffers_template .repeatable").repeatable({
            addTrigger: ".AirportOffers_template .add",
            deleteTrigger: ".AirportOffers_template .delete",
            template: "#AirportOffers_template",
            startIndex: 0,
            afterAdd: function (element) {
                $(element).find(".airport-select").select2({
            ajax: {
                url: "@Url.Action("GetAirport", "Airports")",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        q: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {

                    params.page = params.page || 1;

                    return {
                        results: data.results,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            },
            placeholder: 'Type airport name, ICAO or IATA ',
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 1,
        });
            },
            min: 1,
            startIndex: @Model.AirportOffers?.Count,

        });
    </script>

    <script>
        $('.select2').select2();
        $(".continent-select").select2();

        $(".country-select").select2();

        $(".city-select").select2();

        $('.continent-select').on('change', function () {
            var selectedContinent = $(this).children("option:selected").val();
            $('.country-select').children('option').remove();
            $('.city-select').children('option').remove();
            $.ajax({
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                type: "GET",
                url: "@Url.Action("GetCountries","Countries")",
                data: {
                    ContinentId: selectedContinent
                },
                success: function (data, textStatus, jqXHR) {
                    $.each(data, function (key, value) {
                        var newOption = new Option(value.Name, value.Id, true, true);
                        $('.country-select').append(newOption);
                    });
                    $('.country-select').trigger('change');
                },
                error: function (jqXHR, textStatus, errorThrown) {

                }
            });
        });//.trigger('change');


        $('.country-select').on('change', function () {
            var selectedCountry = $(this).children("option:selected").val();
            var selectedContinent = $('.continent-select').children("option:selected").val();
            $('.city-select').children('option').remove();
            $.ajax({
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                type: "GET",
                url: "@Url.Action("GetCities", "Cities")",
                data: {
                    ContinentId: selectedContinent,
                    CountryId: selectedCountry,
                },
                success: function (data, textStatus, jqXHR) {

                    $.each(data, function (key, value) {
                        var newOption = new Option(value.Name, value.Id, true, true);
                        $('.city-select').append(newOption);
                    });
                    $('.city-select').trigger('change');

                },
                error: function (jqXHR, textStatus, errorThrown) {

                }
            });
        });

        $(".airport-select").select2({
            ajax: {
                url: "@Url.Action("GetAirport", "Airports")",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        q: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {

                    params.page = params.page || 1;

                    return {
                        results: data.results,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            },
            placeholder: 'Type airport name, ICAO or IATA ',
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 1,
        });
    </script>


    <script>


        $('#add-city').on('click', function () {
            var selectedValues = $('.selected-cities').val();
            var newVal = $('.city-select').val();
            var newName = $('.city-select').children('option:selected').html();
            if ($.inArray(newVal, selectedValues) == -1 && newVal != null) {
                var newOption = new Option(newName, newVal, true, true);
                $('.selected-cities').append(newOption);
                $('.city-select').children('option[value="' + newVal + '"]').remove();
                $('.city-select').trigger('change');
            }
        });

        $('#add-country').on('click', function () {
            var selectedValues = $('.selected-countries').val();
            var newVal = $('.country-select').val();
            var newName = $('.country-select').children('option:selected').html();
            if ($.inArray(newVal, selectedValues) == -1 && newVal != null) {
                var newOption = new Option(newName, newVal, true, true);
                $('.selected-countries').append(newOption);
                $('.country-select').children('option[value="' + newVal + '"]').remove();
                $('.country-select').trigger('change');

            }
        });

        //$('#add-continent').on('click', function () {
        //    var selectedValues = $('.selected-continents').val();
        //    var newVal = $('.continent-select').val();
        //    var newName = $('.continent-select').children('option:selected').html();
        //    debugger;
        //    if ($.inArray(newVal, selectedValues) == -1 && newVal != null) {
        //        //var newOption = new Option(newName, newVal, true, true);
        //        //$('.selected-continents').append(newOption);
        //        $('.continent-select').children('option[value="' + newVal + '"]').remove();
        //        $('.continent-select').trigger('change');
        //    }
        //});

        $('.selected-continents,.selected-countries,.selected-cities').on("select2:unselect", function (e) {
            var text = e.params.data.text;
            var val = e.params.data.id;
            $(this).children('option[value="' + val + '"]').remove();
            var newOption = new Option(text, val, true, false);
            if ($(this).hasClass('selected-continents')) {
                $('.continent-select').append(newOption);
            } else if ($(this).hasClass('selected-countries')) {
                $('.country-select').append(newOption);
            }
            else {
                $('.city-select').append(newOption);
            }
        }).trigger('change');
    </script>

    <script>
        $('.btn-toggle').click(function (e) {
            e.preventDefault();
            debuger
            if ($(this).find('price-hide').hasClass('active')) {
                $('#price-input').attr('min', 1);
                $('#price-input').attr('value', 1);
                $('.price-row').toggleClass('hidden');
            } else {
                $('#price-input').attr('min', 0);
                $('#price-input').attr('value', 0);
                $('.price-row').toggleClass('hidden');
            }
            $(this).find('.btn').toggleClass('active');

            if ($(this).find('.btn-primary').length > 0) {
                $(this).find('.btn').toggleClass('btn-primary');
            }
            if ($(this).find('.btn-danger').length > 0) {
                $(this).find('.btn').toggleClass('btn-danger');
            }
            if ($(this).find('.btn-success').length > 0) {
                $(this).find('.btn').toggleClass('btn-success');
            }
            if ($(this).find('.btn-info').length > 0) {
                $(this).find('.btn').toggleClass('btn-info');
            }

            $(this).find('.btn').toggleClass('btn-default');

        });

    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}